---
import { Icon } from "astro-icon/components";
import { profileConfig, commentConfig } from "../config";
import I18nKey from "../i18n/i18nKey";
import { i18n } from "../i18n/translation";
import { formatDateToYYYYMMDD } from "../utils/date-utils";
import { getCategoryUrl, getTagUrl } from "../utils/url-utils";

export interface Props {
  published: Date;
  updated?: Date;
  category?: string;
  tags?: string[];
  hideUpdateDate?: boolean;
  hideTagsForMobile?: boolean;
  isHome?: boolean;
  className?: string;
  slug?: string;
  words?: number;
  minutes?: number;
  showWordCount?: boolean; // Apakah akan menampilkan jumlah kata, defaultnya false untuk menampilkan tag
}

const {
  published,
  updated,
  category,
  tags,
  hideUpdateDate,
  hideTagsForMobile,
  isHome,
  className = "",
  slug,
  words,
  minutes,
  showWordCount = false,
} = Astro.props;
---

<div
  class:list={[
    "flex flex-wrap text-neutral-500 dark:text-neutral-400 items-center gap-4 gap-x-4 gap-y-2",
    className,
  ]}
>
  <!-- Tanggal publikasi -->
  <div class="flex items-center">
    <div class="meta-icon">
      <Icon
        name="material-symbols:calendar-today-outline-rounded"
        class="text-xl"
      />
    </div>
    <span class="text-50 text-sm font-medium"
      >{formatDateToYYYYMMDD(published)}</span
    >
  </div>

  <!-- Tanggal pembaruan -->
  {
    !hideUpdateDate && updated && updated.getTime() !== published.getTime() && (
      <div class="flex items-center">
        <div class="meta-icon">
          <Icon
            name="material-symbols:edit-calendar-outline-rounded"
            class="text-xl"
          />
        </div>
        <span class="text-50 text-sm font-medium">
          {formatDateToYYYYMMDD(updated)}
        </span>
      </div>
    )
  }

  <!-- Kategori -->
  <div class="flex items-center">
    <div class="meta-icon">
      <Icon name="material-symbols:book-2-outline-rounded" class="text-xl" />
    </div>
    <div class="flex flex-row flex-nowrap items-center">
      <a
        href={getCategoryUrl(category || "")}
        aria-label={`Lihat semua postingan di kategori ${category}`}
        class="link-lg transition text-50 text-sm font-medium
                            hover:text-[var(--primary)] dark:hover:text-[var(--primary)] whitespace-nowrap"
      >
        {category || i18n(I18nKey.uncategorized)}
      </a>
    </div>
  </div>

   <!-- Jumlah kata dan waktu baca (hanya untuk daftar postingan) -->
   {
     showWordCount && words !== undefined && minutes !== undefined && (
       <>
         <!-- Jumlah kata -->
         <div class="flex items-center">
           <div class="meta-icon">
             <Icon
               name="material-symbols:article-outline-rounded"
               class="text-xl"
             />
           </div>
           <div class="text-50 text-sm font-medium">
             {words}
             {" " + i18n(words === 1 ? I18nKey.wordCount : I18nKey.wordsCount)}
           </div>
         </div>
         
{/* <!-- Waktu baca -->
         <div class="flex items-center">
           <div class="meta-icon">
             <Icon
               name="material-symbols:schedule-outline-rounded"
               class="text-xl"
             />
           </div>
           <div class="text-50 text-sm font-medium">
             {minutes}
             {" " +
               i18n(minutes === 1 ? I18nKey.minuteCount : I18nKey.minutesCount)}
           </div>
         </div> */}
       </>
     )
   }

   <!-- Tag (hanya untuk halaman detail postingan) -->
   {
     !showWordCount && (
       <div class:list={["items-center", {"flex": !hideTagsForMobile, "hidden md:flex": hideTagsForMobile}]}>
         <div class="meta-icon">
           <Icon name="material-symbols:tag-rounded" class="text-xl" />
         </div>
         <div class="flex flex-row flex-nowrap items-center">
           {(tags && tags.length > 0) && tags.map((tag, i) => (
             <div class:list={["mx-1.5 text-[var(--meta-divider)] text-sm", {"hidden": i == 0}]}>/</div>
             <a href={getTagUrl(tag)} aria-label={`Lihat semua postingan dengan tag ${tag.trim()}`}
                class="link-lg transition text-50 text-sm font-medium
                             hover:text-[var(--primary)] dark:hover:text-[var(--primary)] whitespace-nowrap">
               {tag.trim()}
             </a>
           ))}
           {!(tags && tags.length > 0) && <div class="transition text-50 text-sm font-medium">{i18n(I18nKey.noTags)}</div>}
         </div>
       </div>
     )
   }

  <!-- Statistik pengunjung Twikoo (tidak ditampilkan di beranda, dan hanya ditampilkan jika statistik pengunjung artikel diaktifkan) -->
  {
    !isHome &&
      commentConfig.enable &&
      commentConfig.enableVisitorCount &&
      slug && (
        <div class="flex items-center">
          <div class="meta-icon">
            <Icon
              name="material-symbols:visibility-outline-rounded"
              class="text-xl"
            />
          </div>
          <span class="text-50 text-sm font-medium mr-1">
            {i18n(I18nKey.pageViews)}
          </span>
          <span class="text-50 text-sm font-medium" id="twikoo_visitors">
            {i18n(I18nKey.pageViewsLoading)}
          </span>
        </div>
      )
  }
</div>